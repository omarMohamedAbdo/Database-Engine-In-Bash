#!/bin/bash
Database=${opt}
Metadata=""
data=""
fieldNames=""
tableNames=`ls data/$Database`
existingtables=($(ls data/$Database))
colNames=""
columnNames=""
declare -i found=0
declare -i TableRowCount=0

show_menu(){
clear
columnNo=""
columnNames=""
field=1
select c in 'List all tables' 'Create new table' 'insert into table' 'print table data' 'Delete from table' 'Back' 'Exit'
do
if [[ $c = "List all tables" ]] 
then
ls  "data/$Database"
read
break;
elif [[ $c = "Create new table" ]] 
then
cd "data/$Database"
echo "please Enter the name of table"
. ./../../validationFuncs
TableDuplicationAndNullValidation
Metadata="tableName:$name\n"
while [[ ! $columnNo =~ ^[0-9]+$ ]]; do
    echo "please Enter number of columns"
    read columnNo
done
echo 
Metadata+="columnNo:$columnNo\n"
for ((i = 1 ; i <= $columnNo ; i++)); do
	while [[ ! $field =~ ^[a-z]+ ]]; do
	
    	echo "Enter Name of Field Number $i"
	read field
for  f in $columnNames; do
	while [[ $f = $field ]]; do
	echo "Duplication for column name, please enter another name"	
	read field
done 
done
		if [ $i -eq $columnNo ]
		then fieldNames+="$field"
		else fieldNames+="$field,"
		columnNames+="$field"
		fi	
	done		
	echo "Choose Field type"
	select opt in "Integer" "Text" ; do 
	Metadata+="$field:$opt\n"
	break;	
	done 	
	field=""
done
touch $name;
touch ".$name.metadata";
echo -e $fieldNames >> $name
echo -e $Metadata >> .$name.metadata
columnNames=""
echo "The table is created successfully" 
cd ..
cd ..
read
break;
elif [[ $c = "insert into table" ]] 
then
. ./readandwriteoperations
takeTableInput
read
break;
elif [[ $c = "print table data" ]] 
then
echo "Please Enter the table name"
read tableName
. ./validationFuncs
chechTableExist
tr  -s ',' '  ' < "data/$Database/$tableName"
read
break;
elif [[ $c = "Delete from table" ]] 
then
echo "Please Enter the table name"
read tableName
. ./validationFuncs
chechTableExist
TableRowCount=($(< "data/$Database/$tableName" wc -l)-1)
echo "Please Enter the row to delete"
read -r rowNo
rowNo=$((rowNo))
while [[ $rowNo -gt TableRowCount || $rowNo -le 0 || ! $rowNo =~ ^[0-9]+$ ]];do
	 echo "Invalid row Number,Enter a Valid one"
	 read -r rowNo
	 rowNo=$((rowNo))
done
declare -i lineToDelete=($rowNo+1)
sed -i "$lineToDelete"'d' "data/$Database/$tableName"
if [[ $? -eq 0 ]]
then
echo "Deleted Successfully"
fi 
read
break;
elif [[ $c = "Exit" ]] 
then
exit 
elif [[ $c = "Back" ]]  
then
. ./connectToDatabase
fi
done
}
while true
do
show_menu
done
